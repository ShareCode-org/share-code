[{"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\App.js":"1","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\home-page\\index.js":"2","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\responsive-navbar\\index.js":"3","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\navbar\\index.js":"4","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\navbar\\style.js":"5","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\responsive-navbar\\style.js":"6","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\api\\api.js":"7","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\code-card\\index.js":"8","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\post-page\\index.js":"9","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\post-page\\style.js":"10","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\sign-up-and-sign-in\\index.js":"11","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\sign-up\\index.js":"12","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\sign-in\\index.js":"13","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\sign-in\\style.js":"14","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\context\\userContext.js":"15","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\index.js":"16","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\sign-up\\style.js":"17","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\code-page\\style.js":"18","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\code-card\\style.js":"19","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\home-page\\style.js":"20","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\sign-up-and-sign-in\\style.js":"21","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\code-page\\index.js":"22"},{"size":2648,"mtime":1612628697148,"results":"23","hashOfConfig":"24"},{"size":1912,"mtime":1612469728072,"results":"25","hashOfConfig":"24"},{"size":1257,"mtime":1612464733246,"results":"26","hashOfConfig":"24"},{"size":3094,"mtime":1612464247732,"results":"27","hashOfConfig":"24"},{"size":1262,"mtime":1612464240761,"results":"28","hashOfConfig":"24"},{"size":2093,"mtime":1611924800320,"results":"29","hashOfConfig":"24"},{"size":115,"mtime":1611502377354,"results":"30","hashOfConfig":"24"},{"size":393,"mtime":1611255576680,"results":"31","hashOfConfig":"24"},{"size":3118,"mtime":1612628841867,"results":"32","hashOfConfig":"24"},{"size":565,"mtime":1612620486394,"results":"33","hashOfConfig":"24"},{"size":349,"mtime":1612118017504,"results":"34","hashOfConfig":"24"},{"size":2918,"mtime":1612628714673,"results":"35","hashOfConfig":"24"},{"size":2986,"mtime":1612554479916,"results":"36","hashOfConfig":"24"},{"size":482,"mtime":1612529654045,"results":"37","hashOfConfig":"24"},{"size":85,"mtime":1612381414654,"results":"38","hashOfConfig":"24"},{"size":292,"mtime":1612380051120,"results":"39","hashOfConfig":"24"},{"size":482,"mtime":1612519239620,"results":"40","hashOfConfig":"24"},{"size":862,"mtime":1612627078156,"results":"41","hashOfConfig":"24"},{"size":627,"mtime":1611840315977,"results":"42","hashOfConfig":"24"},{"size":477,"mtime":1611858289615,"results":"43","hashOfConfig":"24"},{"size":785,"mtime":1612467762218,"results":"44","hashOfConfig":"24"},{"size":1930,"mtime":1612628058480,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"aku624",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\App.js",["98","99"],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\home-page\\index.js",["100"],"import React from 'react';\r\nimport API from '../../api/api';\r\nimport BeatLoader from 'react-spinners/BeatLoader';\r\nimport CodeCard from '../../components/code-card/index';\r\nimport { css } from \"@emotion/core\";\r\nimport { HomePostsDiv, HomeMessage } from './style';\r\n\r\nconst HomePage = () => {\r\n    const [posts, setPosts] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(true);\r\n\r\n\r\n    const override = css`\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        @media (max-width: 768px) {\r\n            left: 42%;\r\n        } \r\n    `;\r\n\r\n    React.useEffect(() => {\r\n        API.get('/post')\r\n            .then(res => {\r\n                setTimeout(() => {\r\n                    setPosts(res.data);\r\n                    setLoading(!loading);\r\n                    console.log(posts);\r\n                }, 500)\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {!loading ? (\r\n                posts.length ? (\r\n                    <HomePostsDiv>\r\n                        {posts.map((post, index) => (\r\n                            <CodeCard\r\n                                key={index}\r\n                                title={post.title}\r\n                                description={post.description}\r\n                                id={post._id}\r\n                            />\r\n                        ))}\r\n                    </HomePostsDiv>\r\n\r\n                ) : (\r\n                        <HomeMessage>There is no posts.</HomeMessage>\r\n                    )\r\n            ) : (\r\n                    <div>\r\n                        <BeatLoader\r\n                            color='blue'\r\n                            loading={loading}\r\n                            css={override}\r\n                            size={20}\r\n                        />\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default HomePage;",["101","102"],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\responsive-navbar\\index.js",["103","104"],"import React from \"react\";\r\nimport { UserContext } from '../../context/userContext';\r\nimport { StyledMenu, StyledBurger } from \"./style\";\r\n\r\nexport const Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <StyledBurger className='not-btn' open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </StyledBurger>\r\n  )\r\n};\r\n\r\nconst ResponsiveNavbar = ({ open }) => {\r\n  const { isLogging, setIsLogging } = React.useContext(UserContext);\r\n\r\n  return (\r\n    <StyledMenu open={open}>\r\n      <a href=\"/\">\r\n        Home\r\n        </a>\r\n      {\r\n        isLogging ? (\r\n          <a href=\"/post\">\r\n            Post\r\n          </a>\r\n        ) : (\r\n            <a onClick={() => alert('Not Available')}>\r\n              Post\r\n            </a>\r\n          )\r\n      }\r\n\r\n      {\r\n        isLogging ? (\r\n          <a\r\n            onClick={() => {\r\n              setIsLogging(false);\r\n              localStorage.setItem('token', '');\r\n              localStorage.setItem('isLogging', false);\r\n            }}>\r\n            Logout\r\n          </a>\r\n        ) : (\r\n            <a href=\"/sign-up-and-sign-in\">\r\n              Sign in\r\n            </a>\r\n          )\r\n      }\r\n\r\n\r\n\r\n\r\n    </StyledMenu>\r\n  )\r\n};\r\n\r\nexport default ResponsiveNavbar;",["105","106"],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\navbar\\index.js",[],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\navbar\\style.js",[],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\responsive-navbar\\style.js",[],["107","108"],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\api\\api.js",[],["109","110"],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\code-card\\index.js",[],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\post-page\\index.js",["111"],"import React from 'react';\r\nimport API from '../../api/api';\r\nimport { decodeToken } from \"react-jwt\";\r\nimport { toast } from 'react-toastify';\r\nimport { ContactPageDivContainer, PostCaptcha, PostSpan, PostSentAlert } from './style';\r\n\r\nconst PostPage = () => {\r\n    const [title, setTitle] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    const [code, setCode] = React.useState('');\r\n    const tokenData = decodeToken(localStorage.getItem('token'));\r\n    const [errorMessage, setErrorMessage] = React.useState('');\r\n    const [Value, setValue] = React.useState('');\r\n\r\n    const onChange = (value) => {\r\n        setValue(value);\r\n    };\r\n\r\n    const postData = {\r\n        title: title,\r\n        description: description,\r\n        code: code,\r\n        createdBy: tokenData.username,\r\n        token: localStorage.getItem('token')\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        if (title === \"\" && description === \"\" && code === \"\") {\r\n            setErrorMessage('The form is empty');\r\n        }\r\n        else if (title === \"\") {\r\n            setErrorMessage('Title is empty');\r\n        }\r\n        else if (description === \"\") {\r\n            setErrorMessage('Description is empty');\r\n        }\r\n        else if (code === \"\") {\r\n            setErrorMessage('Code is empty');\r\n        }\r\n        else {\r\n            if (Value) {\r\n                setErrorMessage('');\r\n                API.post(`/post`, postData)\r\n                    .then(res => {\r\n                        setTitle('');\r\n                        setDescription('');\r\n                        setCode('');\r\n                        toast.success('Posted Successfully!');\r\n                        window.location.href = '/';\r\n                    })\r\n            } else {\r\n                setErrorMessage('Captcha required');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ContactPageDivContainer>\r\n            <>\r\n                <div>\r\n                    <input\r\n                        placeholder=\"Title\"\r\n                        value={title}\r\n                        onChange={e => setTitle(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        placeholder=\"Description\"\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <textarea\r\n                        placeholder=\"Code\"\r\n                        value={code}\r\n                        onChange={e => setCode(e.target.value)}\r\n                    />\r\n                </div>\r\n                <PostSpan>{errorMessage}</PostSpan>\r\n                <PostCaptcha\r\n                    sitekey=\"6LdR6CYaAAAAAIA-PEqiHM8RqNEndngWJBKG0__u\"\r\n                    onChange={onChange}\r\n                />\r\n                <div>\r\n                    <button onClick={handleSubmit}>Add</button>\r\n                </div>\r\n            </>\r\n\r\n        </ContactPageDivContainer>\r\n    )\r\n};\r\n\r\nexport default PostPage;","C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\post-page\\style.js",[],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\sign-up-and-sign-in\\index.js",[],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\sign-up\\index.js",[],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\sign-in\\index.js",[],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\sign-in\\style.js",[],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\context\\userContext.js",[],["112","113"],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\index.js",[],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\sign-up\\style.js",[],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\code-page\\style.js",[],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\components\\code-card\\style.js",[],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\home-page\\style.js",[],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\sign-up-and-sign-in\\style.js",[],"C:\\Users\\lenovo\\Desktop\\Dev\\ShareCode\\share-code\\src\\pages\\code-page\\index.js",["114"],{"ruleId":"115","severity":1,"message":"116","line":1,"column":55,"nodeType":"117","messageId":"118","endLine":1,"endColumn":63},{"ruleId":"119","severity":1,"message":"120","line":35,"column":8,"nodeType":"121","endLine":35,"endColumn":10,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"123","line":31,"column":8,"nodeType":"121","endLine":31,"endColumn":10,"suggestions":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":29,"column":13,"nodeType":"131","endLine":29,"endColumn":55},{"ruleId":"129","severity":1,"message":"130","line":37,"column":11,"nodeType":"131","endLine":42,"endColumn":16},{"ruleId":"125","replacedBy":"132"},{"ruleId":"127","replacedBy":"133"},{"ruleId":"125","replacedBy":"134"},{"ruleId":"127","replacedBy":"135"},{"ruleId":"125","replacedBy":"136"},{"ruleId":"127","replacedBy":"137"},{"ruleId":"115","severity":1,"message":"138","line":5,"column":58,"nodeType":"117","messageId":"118","endLine":5,"endColumn":71},{"ruleId":"125","replacedBy":"139"},{"ruleId":"127","replacedBy":"140"},{"ruleId":"119","severity":1,"message":"141","line":41,"column":8,"nodeType":"121","endLine":41,"endColumn":10,"suggestions":"142"},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isTokenExpired'. Either include it or remove the dependency array.","ArrayExpression",["143"],"React Hook React.useEffect has missing dependencies: 'loading' and 'posts'. Either include them or remove the dependency array. You can also do a functional update 'setLoading(l => ...)' if you only need 'loading' in the 'setLoading' call.",["144"],"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["145"],["146"],["145"],["146"],["145"],["146"],"'PostSentAlert' is defined but never used.",["145"],["146"],"React Hook React.useEffect has missing dependencies: 'id' and 'loading'. Either include them or remove the dependency array. You can also do a functional update 'setLoading(l => ...)' if you only need 'loading' in the 'setLoading' call.",["147"],{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},"Update the dependencies array to be: [isTokenExpired]",{"range":"154","text":"155"},"Update the dependencies array to be: [loading, posts]",{"range":"156","text":"157"},"Update the dependencies array to be: [id, loading]",{"range":"158","text":"159"},[1300,1302],"[isTokenExpired]",[875,877],"[loading, posts]",[1063,1065],"[id, loading]"]